--lpm_add_sub CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone IV E" LPM_PIPELINE=1 LPM_REPRESENTATION="SIGNED" LPM_WIDTH=10 aclr add_sub clken clock dataa datab result
--VERSION_BEGIN 22.1 cbx_cycloneii 2023:07:20:14:03:03:SC cbx_lpm_add_sub 2023:07:20:14:03:03:SC cbx_mgl 2023:07:20:14:14:26:SC cbx_nadder 2023:07:20:14:03:03:SC cbx_stratix 2023:07:20:14:03:03:SC cbx_stratixii 2023:07:20:14:03:03:SC  VERSION_END


-- Copyright (C) 2023  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 20 
SUBDESIGN add_sub_nrg
( 
	aclr	:	input;
	add_sub	:	input;
	clken	:	input;
	clock	:	input;
	dataa[9..0]	:	input;
	datab[9..0]	:	input;
	result[9..0]	:	output;
) 
VARIABLE
	pipeline_dffe[9..0]	:	DFFE
		WITH (
			power_up ="low"
		);
	result_int[10..0]	:	WIRE;
BEGIN 
	result_int[] = (dataa[], !add_sub) + (!add_sub $ datab[], !add_sub);
	pipeline_dffe[].clk = clock;
	pipeline_dffe[].clrn = !aclr;
	pipeline_dffe[].ena = clken;
	result[] = pipeline_dffe[9..0].q;
	pipeline_dffe[9..0].d = result_int[10..1];
END;
--VALID FILE
